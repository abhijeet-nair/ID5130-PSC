// void LUfunc1 (double A[N][N], double L[N][N], double U[N][N]) {
//     for (int k = 0; k < N; k++) {
//         L[k][k] = 1;
//         for (int i = k + 1; i < N; i++) {
//             L[i][k] = A[i][k]/A[k][k]; // Multiplier (L part)
//         }

//         for (int i = k + 1; i < N; i++) {
//             for (int j = k + 1; j < N; j++) {
//                 U[i][j] += -L[i][k]*A[k][j]; // U part
//             }
//         }
//     }
// }

// void LUfunc2 (double A[N][N], double L[N][N], double U[N][N]) {
//     int i = 0, j = 0, k = 0;
//     // for (i = 0; i < N; i++)
//     // {
//     //     for (j = 0; j < N; j++)
//     //     {
//     //         if (j < i)
//     //             L[j][i] = 0;
//     //         else
//     //         {
//     //             L[j][i] = A[j][i];

//     //             for (k = 0; k < i; k++)
//     //             {
//     //                 L[j][i] = L[j][i] - L[j][k] * U[k][i];
//     //             }
//     //         }
//     //     }
//     //     for (j = 0; j < N; j++)
//     //     {
//     //         if (j < i)
//     //             U[i][j] = 0;
//     //         else if (j == i)
//     //             U[i][j] = 1;
//     //         else
//     //         {
//     //             U[i][j] = A[i][j] / L[i][i];
//     //             for (k = 0; k < i; k++)
//     //             {
//     //                 U[i][j] = U[i][j] - ((L[i][k] * U[k][j]) / L[i][i]);
//     //             }
//     //         }
//     //     }
//     // }
//     for (i = 0; i < N; i++) {
//         for (j = 0; j < i; )
//     }
// }